<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: storage.proto

namespace Jason\Chain33\Kernel\Protobuf;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * 隐私存证模型，如果一个文件需要存证，且不公开内容，可以选择将源文件通过对称加密算法加密后上链
 *
 * Generated from protobuf message <code>Jason.Chain33.Kernel.Protobuf.EncryptNotaryStorage</code>
 */
class EncryptNotaryStorage extends \Google\Protobuf\Internal\Message
{
    /**
     *存证明文内容的hash值，推荐使用sha256哈希，限制256位得摘要值
     *
     * Generated from protobuf field <code>bytes contentHash = 1;</code>
     */
    protected $contentHash = '';
    /**
     *源文件得密文，由加密key及nonce对明文加密得到该值。
     *
     * Generated from protobuf field <code>bytes encryptContent = 2;</code>
     */
    protected $encryptContent = '';
    /**
     *加密iv，通过AES进行加密时制定随机生成的iv,解密时需要使用该值
     *
     * Generated from protobuf field <code>bytes nonce = 3;</code>
     */
    protected $nonce = '';
    /**
     *自定义的主键，可以为空，如果没传，则用txhash为key
     *
     * Generated from protobuf field <code>string key = 4;</code>
     */
    protected $key = '';
    /**
     *字符串值
     *
     * Generated from protobuf field <code>string value = 5;</code>
     */
    protected $value = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $contentHash
     *          存证明文内容的hash值，推荐使用sha256哈希，限制256位得摘要值
     *     @type string $encryptContent
     *          源文件得密文，由加密key及nonce对明文加密得到该值。
     *     @type string $nonce
     *          加密iv，通过AES进行加密时制定随机生成的iv,解密时需要使用该值
     *     @type string $key
     *          自定义的主键，可以为空，如果没传，则用txhash为key
     *     @type string $value
     *          字符串值
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Storage::initOnce();
        parent::__construct($data);
    }

    /**
     *存证明文内容的hash值，推荐使用sha256哈希，限制256位得摘要值
     *
     * Generated from protobuf field <code>bytes contentHash = 1;</code>
     * @return string
     */
    public function getContentHash()
    {
        return $this->contentHash;
    }

    /**
     *存证明文内容的hash值，推荐使用sha256哈希，限制256位得摘要值
     *
     * Generated from protobuf field <code>bytes contentHash = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setContentHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->contentHash = $var;

        return $this;
    }

    /**
     *源文件得密文，由加密key及nonce对明文加密得到该值。
     *
     * Generated from protobuf field <code>bytes encryptContent = 2;</code>
     * @return string
     */
    public function getEncryptContent()
    {
        return $this->encryptContent;
    }

    /**
     *源文件得密文，由加密key及nonce对明文加密得到该值。
     *
     * Generated from protobuf field <code>bytes encryptContent = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setEncryptContent($var)
    {
        GPBUtil::checkString($var, False);
        $this->encryptContent = $var;

        return $this;
    }

    /**
     *加密iv，通过AES进行加密时制定随机生成的iv,解密时需要使用该值
     *
     * Generated from protobuf field <code>bytes nonce = 3;</code>
     * @return string
     */
    public function getNonce()
    {
        return $this->nonce;
    }

    /**
     *加密iv，通过AES进行加密时制定随机生成的iv,解密时需要使用该值
     *
     * Generated from protobuf field <code>bytes nonce = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setNonce($var)
    {
        GPBUtil::checkString($var, False);
        $this->nonce = $var;

        return $this;
    }

    /**
     *自定义的主键，可以为空，如果没传，则用txhash为key
     *
     * Generated from protobuf field <code>string key = 4;</code>
     * @return string
     */
    public function getKey()
    {
        return $this->key;
    }

    /**
     *自定义的主键，可以为空，如果没传，则用txhash为key
     *
     * Generated from protobuf field <code>string key = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->key = $var;

        return $this;
    }

    /**
     *字符串值
     *
     * Generated from protobuf field <code>string value = 5;</code>
     * @return string
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     *字符串值
     *
     * Generated from protobuf field <code>string value = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->value = $var;

        return $this;
    }

}

